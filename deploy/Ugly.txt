<!DOCTYPE html>
<html>
<head>
    <title>CATS-SAFe Delivery Metrics-0.1</title>
    <!--  (c) 2017 CA Technologies.  All Rights Reserved. -->
    <!--  Build Date: Sat Jul 28 2018 07:07:10 GMT-0600 (MDT) -->

    <script type="text/javascript">
        var APP_BUILD_DATE = "Sat Jul 28 2018 07:07:10 GMT-0600 (MDT)";
        var ARTIFACT = "F391";
        var BUILDER  = "corkr03";
        var CHECKSUM = 50852579987;
    </script>

    <script type="text/javascript" src="/apps/2.1/sdk.js"></script>
    <!-- our highcharts (needed so that we can add patterns)
    <script type="text/javascript" src="/apps/2.1/lib/analytics/analytics-all.js"></script>
    -->


    <script type="text/javascript">
        Rally.onReady(function() {
            Ext.override(Rally.ui.picker.plugin.RemoteFiltering,{_onInputTextChanged:function(a){var b=!Ext.isEmpty(a)&&!this.cmp.store.isLoading(),c=this.cmp.store;if(b){c.filters&&c.filters.clear();var d=Ext.create("Rally.data.wsapi.Filter",{property:"Name",operator:"contains",value:a});c.filter(d.and({property:"Archived",value:!1}))}else this.resetMatchedText();c.fireEvent("filterbytextinput")}}),Ext.define("Rally.technicalservices.InfoLink",{extend:"Rally.ui.dialog.Dialog",alias:"widget.tsinfolink",informationHtml:null,title:"Build Information",defaults:{padding:5,margin:5},closable:!0,draggable:!0,autoShow:!0,width:350,informationalConfig:null,showLog:!1,logger:null,items:[{xtype:"container",itemId:"information"},{xtype:"container",itemId:"button_box"}],initComponent:function(){Ext.id(this);this.title="<span class='icon-help'> </span>"+this.title,this.callParent(arguments)},_generateChecksum:function(a){var b,c=305419896;for(a=a.replace(/var CHECKSUM = .*;/,""),a=a.replace(/var BUILDER  = .*;/,""),a=a.replace(/\s/g,""),b=0;b<a.length;b++)c+=a.charCodeAt(b)*b;return c},_checkChecksum:function(a){var b=Ext.create("Deft.Deferred"),c=this;return Ext.Ajax.request({url:document.URL,params:{id:1},success:function(a){if(text=a.responseText,CHECKSUM){var d=c._generateChecksum(text);if(CHECKSUM!==d)return void b.resolve(!1)}b.resolve(!0)}}),b.promise},_addToContainer:function(a){var b=Ext.apply({xtype:"container",height:200,overflowY:!0},this.informationalConfig);a.add(b)},afterRender:function(){var a=Rally.getApp();if(!Ext.isEmpty(this.informationalConfig)){var b=this.down("#information");this._addToContainer(b)}this.showLog&&this.logger&&this.down("#button_box").add({xtype:"rallybutton",text:"Show Log",listeners:{scope:this,click:function(){this.logger.displayLog()}}}),a.isExternal()?this.addDocked({xtype:"container",cls:"build-info",padding:2,dock:"bottom",html:"... Running externally"}):this._checkChecksum(a).then({scope:this,success:function(a){a||this.addDocked({xtype:"container",cls:"build-info",dock:"bottom",padding:2,html:'<span class="icon-warning"> </span>Checksums do not match'})},failure:function(a){console.log("oops:",a)}}),this.callParent(arguments)},beforeRender:function(){if(this.callParent(arguments),this.informationHtml&&this.addDocked({xtype:"component",componentCls:"intro-panel",padding:2,html:this.informationHtml,dock:"bottom"}),this.addDocked({xtype:"container",cls:"build-info",padding:2,dock:"bottom",html:"This app was created by the CA AC Technical Services Team."}),APP_BUILD_DATE){var a=Ext.String.format("Built on: {0} <br/>Built by: {1}",APP_BUILD_DATE,BUILDER);ARTIFACT&&(a=a+"<br/>Source artifact: "+ARTIFACT),this.addDocked({xtype:"container",cls:"build-info",padding:2,dock:"top",html:a})}}}),Ext.define("CArABU.technicalservices.Logger",{saveForLater:!1,saveLines:100,logArray:[],constructor:function(a){Ext.apply(this,a)},setSaveForLater:function(a){this.saveForLater=a},log:function(a){var b="[ "+Ext.util.Format.date(new Date,"Y-m-d H:i:s.u")+" ]",c=[];c=Ext.Array.push(c,[b]),c=Ext.Array.push(c,Ext.Array.slice(arguments,0)),this.saveForLater&&(this.logArray||(this.logArray=[]),this.logArray.push(c.join(" ")),this.logArray.length>this.saveLines&&this.logArray.shift()),window.console&&console.log.apply(console,c)},getLogText:function(){return this.logArray&&0!==this.logArray.length?this.logArray.join("<br/>"):"-- no log --"},displayLog:function(){var a=this.getLogText();this.popup=Ext.create("Rally.ui.dialog.Dialog",{width:Ext.getBody().getWidth()-20,height:Ext.getBody().getHeight()-20,closable:!0,title:"Log",autoShow:!0,layout:"border",defaults:{layout:"fit",width:"50%",border:!1},items:[{region:"center",xtype:"container",html:a,autoScroll:!0}]})}}),Ext.define("TSUtilities",{singleton:!0,loadWsapiRecords:function(a){var b=Ext.create("Deft.Deferred"),c={model:"Defect",fetch:["ObjectID"],pageSize:2e3,limit:"Infinity"};return Ext.create("Rally.data.wsapi.Store",Ext.Object.merge(c,a)).load({callback:function(a,c,d){d?b.resolve(a):b.reject("Problem loading: "+c.error.errors.join(". "))}}),b.promise},saveCSVToFile:function(a,b,c){void 0===c&&(c={type:"text/csv;charset=utf-8"}),this.saveAs(a,b,c)},saveAs:function(a,b){if(Ext.isIE9m)return void Rally.ui.notify.Notifier.showWarning({message:"Export is not supported for IE9 and below."});var c=null;try{c=new Blob([a],{type:"text/plain"})}catch(d){window.BlobBuilder=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,window.BlobBuilder&&"TypeError"==d.name&&(bb=new BlobBuilder,bb.append([a]),c=bb.getBlob("text/plain"))}if(!c)return void Rally.ui.notify.Notifier.showWarning({message:"Export is not supported for this browser."});var e=b;if(Ext.isIE10p)return void window.navigator.msSaveOrOpenBlob(c,e);var f=this.createObjectURL(c);if(f){var g=document.createElement("a");"download"in g?g.download=e:g.target="_blank",g.innerHTML="Download File",g.href=f,Ext.isChrome||(g.onclick=this.destroyClickedElement,g.style.display="none",document.body.appendChild(g)),g.click()}else Rally.ui.notify.Notifier.showError({message:"Export is not supported "})},createObjectURL:function(a){return window.webkitURL?window.webkitURL.createObjectURL(a):window.URL&&window.URL.createObjectURL?window.URL.createObjectURL(a):null},destroyClickedElement:function(a){document.body.removeChild(a.target)}}),Ext.define("CArABU.utils.panel.SummaryPanel",{extend:"Ext.panel.Panel",alias:"widget.summarypanel",title:"Summary",collapsible:!0,cls:"app-panel",layout:"fit",initComponent:function(){this.callParent(),console.log("config",this)}}),Ext.define("CArABU.utils.settings.EnhancedTagSelector",{extend:"Ext.form.field.Base",alias:"widget.enhancedtagselector",fieldSubTpl:'<div id="{id}" class="settings-grid"></div>',config:{value:void 0},onRender:function(){this.callParent(arguments);var a=this.value;Ext.isString(a)&&(a=a.split(",")),this._valueRecords=[];var b=_.map(a,function(a){return{property:"ObjectID",value:Rally.util.Ref.getOidFromRef(a)}});b.length>0?(b.length>1&&(b=Rally.data.wsapi.Filter.or(b)),Ext.create("Rally.data.wsapi.Store",{fetch:["Name"],filters:b,model:"Tag",pageSize:b.length}).load({callback:function(a,b){this._valueRecords=_.map(a,function(a){return a.getData()}),this._buildControls()},scope:this})):this._buildControls()},_buildControls:function(){this._ct&&this._ct.destroy(),this._ct=Ext.create("Ext.container.Container",{layout:"hbox",renderTo:this.inputEl,items:[{xtype:"rallytagpicker",fieldLabel:"Defect Tags",labelWidth:200,labelAlign:"right",enableAddNew:!1,enableGrouping:!1,remoteFilter:!0,storeConfig:{pageSize:25,limit:25},margin:"10 10 200 10",width:400,listeners:{selectionchange:this._refreshPills,scope:this}},{xtype:"container",itemId:"pillCt",flex:1,layout:"table",columns:3,items:this._getSelectedTagPills()}]}),this.fireEvent("ready")},_refreshPills:function(a,b){var c=_.pluck(this._valueRecords,"_ref");a.collapse(),_.each(b,function(a){Ext.Array.contains(c,a.get("_ref"))||this._valueRecords.push(a.getData())},this),this._buildControls()},_getSelectedTagPills:function(){return _.map(this._valueRecords,function(a){return{xtype:"rallybutton",text:a.Name,iconCls:"icon-delete",handler:this._destroyRecord,scope:this,cls:"tag-btn",tagRef:a._ref,margin:"10 5 5 5"}},this)},_destroyRecord:function(a){this._valueRecords=Ext.Array.remove(this._valueRecords,a.tagRef),a.destroy()},getSubmitData:function(){var a={};return submitData=_.pluck(this._valueRecords,"_ref").join(","),a[this.name]=submitData,a},getErrors:function(){var a=[];return a},setValue:function(a){this.callParent(arguments),this._value=a}}),Ext.define("CArABU.app.utils.teamMetricsCalculator",{precision:2,constructor:function(a){this.project=a.project||{},this.iterationByName=this._filterIterations(a.iterations),this.snapshotsByIterationOid=this._filterSnapshots(a.snapshots),this.calculatedData={},this.daysOffsetFromIterationStart=a.daysOffsetFromIterationStart||0,this.daysOffsetFromPIStart=a.daysOffsetFromPIStart||0,this.release=a.release,this._filterIterationRevisions(a.iterationRevisions),this.showPIPMetrics=a.showPIPMetrics,this.defectTags=[],a.defectTag&&(Ext.isArray(a.defectTag)||(a.defectTag=a.defectTag.split(",")),this.defectTags=_.map(a.defectTag,function(a){return Rally.util.Ref.getOidFromRef(a)})),this._clearData()},getProjectName:function(){return this.project.Name},setDaysOffsetFromIterationStart:function(a){a!=this.daysOffsetFromIterationStart&&(this.daysOffsetFromIterationStart=a,this._clearData())},setDaysOffsetFromPIStart:function(a){a!=this.daysOffsetFromPIStart&&(this.daysOffsetFromPIStart=a,this._clearData())},_calculate:function(a){var b=this.iterationByName[a],c=this.daysOffsetFromIterationStart,d={plannedPoints:0,acceptedPoints:0,totalPointsAtSprintEnd:0,blockedDays:0,averageBlockedResolutionTime:0,defectsClosed:0,piPlanLoad:0},e=[],f=[];b||(this.calculatedData[a]={});for(var g=Rally.util.DateTime.add(b.StartDate,"day",c),h=b.EndDate,i=(this.release.ReleaseDate,Rally.util.DateTime.add(this.release.ReleaseStartDate,"day",this.daysOffsetFromPIStart)),j=new Date,k=this.snapshotsByIterationOid[b.ObjectID]||[],l={},m=[],n=0;n<k.length;n++){var o=k[n],p=Rally.util.DateTime.fromIsoString(o._ValidFrom),q=Rally.util.DateTime.fromIsoString(o._ValidTo),r=o._TypeHierarchy&&o._TypeHierarchy.slice(-1)[0];if(g>=p&&q>g&&j>=g&&(d.plannedPoints+=o.PlanEstimate,e.push(o.ObjectID)),i>=p&&q>i&&j>=i&&(d.piPlanLoad+=o.PlanEstimate),q>new Date&&o.AcceptedDate.length>0&&(d.acceptedPoints+=o.PlanEstimate,f.push(o)),h>=p&&q>h&&j>=h&&(d.totalPointsAtSprintEnd+=o.PlanEstimate),o.Blocked){var s=this._getBlockedDuration(o,b);if(s>0)if(l[o.ObjectID])if(l[o.ObjectID].currentlyBlocked){var t=l[o.ObjectID].durations.length-1,u=l[o.ObjectID].durations[t];l[o.ObjectID].durations[t]=u+s}else l[o.ObjectID].durations.push(s),l[o.ObjectID].currentlyBlocked=!0;else l[o.ObjectID]={durations:[s],currentlyBlocked:!0}}else l[o.ObjectID]&&(l[o.ObjectID].currentlyBlocked=!1);"Defect"==r&&o.Tags&&_.intersection(o.Tags,this.defectTags).length>0&&(o.AcceptedDate&&!Ext.Array.contains(m,o.ObjectID)?(d.defectsClosed++,m.push(o.ObjectID)):!o.AcceptedDate&&Ext.Array.contains(m,o.ObjectID)&&(d.defectsClosed--,m=Ext.Array.remove(m,o.ObjectID)))}var v=_.reduce(l,function(a,b,c){return a=a.concat(b.durations)},[]),w=_.reduce(f,function(a,b){return _.contains(e,b.ObjectID)&&(a+=b.PlanEstimate),a},0);d.plannedAcceptedPoints=w,d.blockedDays=Ext.Array.sum(v),d.averageBlockedResolutionTime=Ext.Array.mean(v),d.blockedDurations=v,d.piPlanVelocity=this._calculatePIPlanVelocity(b,this.daysOffsetFromPIStart,this.release),this.calculatedData[a]=d},_calculatePIPlanVelocity:function(a,b,c){var d=Rally.util.DateTime.add(c.ReleaseStartDate,"day",b),e=0;return a.CreationDate<=d&&_.each(a.__iterationPlannedVelocities,function(a){a.updateDate<=d&&d<=new Date&&(e=a.value)}),e},_getBlockedDuration:function(a,b){var c=Rally.util.DateTime.fromIsoString(a._ValidFrom),d=Rally.util.DateTime.fromIsoString(a._ValidTo);if(c==d)return 0;if(!b)return 0;if(c>d){var e=d;d=c,c=e}if(c>b.EndDate||d<b.StartDate)return 0;c<b.StartDate&&d>b.StartDate&&(c=b.StartDate),d>b.EndDate&&c<b.EndDate&&(d=b.EndDate<new Date?b.EndDate:new Date);var f=Rally.util.DateTime.getDifference(d,c,"hour");if(8>=f)return d.getDay()>0&&d.getDay()<6||c.getDay()>0&&c.getDay()<6?f/8:0;if(c=new Date(c.getFullYear(),c.getMonth(),c.getDate()),d=new Date(d.getFullYear(),d.getMonth(),d.getDate()),c===d)return 1;for(var g=0,h=c;d>=h;){var i=h.getDay();0!=i&&6!=i&&g++;var j=Rally.util.DateTime.add(h,"day",1);h=j}return Math.max(g-1,1)},getData:function(){if(this.data)return this.data;var a=0,b=[],c={name:"Planned Accepted Points",total:0,project:this.project.Name,isPercent:!1,key:"plannedAcceptedPoints",hidden:!0},d={name:"Planned Points",total:0,project:this.project.Name,isPercent:!1,key:"plannedPoints"},e={name:"Accepted Points",total:0,project:this.project.Name,isPercent:!1,key:"acceptedPoints"},f={name:"Acceptance Ratio",total:0,project:this.project.Name,isPercent:!0,key:"acceptanceRatio"},g={name:"Points After Commitment",total:0,project:this.project.Name,isPercent:!1,key:"pointsAfterCommitment"},h={name:"Days Blocked",total:0,project:this.project.Name,isPercent:!1,key:"daysBlocked"},i={name:"Average Blocker Resolution",total:0,project:this.project.Name,isPercent:!1,key:"avgBlockerResolution"},j={name:"Live Defects Closed",total:0,project:this.project.Name,isPercent:!1,key:"defectsClosedByTag"},k={name:"PIP Velocity",total:0,project:this.project.Name,isPercent:!1,key:"piVelocityPlanned"},l={name:"PIP Load",total:0,project:this.project.Name,isPercent:!1,key:"piLoadPlanned"},m={name:"Planned Acceptance Ratio",total:0,project:this.project.Name,isPercent:!0,key:"plannedAcceptanceRatio"};return Ext.Object.each(this.iterationByName,function(n,o){var p=n.toString();d[p]=this.getPlannedPoints(n),d.total+=d[p],e[p]=this.getAcceptedPoints(n),e.total+=e[p],f[p]=this.getAcceptanceRatio(n),c.total+=this.getPlannedAcceptedPoints(n),m[p]=this.getPlannedAcceptanceRatio(n),g[p]=this.getPointsAddedAfterCommitment(n),g.total+=Math.max(g[p]||0,0),h[p]=this.getDaysBlocked(n)||0,h.total+=h[p],i[p]=this.getAverageBlockerResolution(n),i[p]&&(i.total+=i[p],a++),j[p]=this.getDefectsClosedByTag(n),j.total+=j[p],k[p]=this.getPIPVelocityPlanned(n),k.total+=k[p],l[p]=this.getPIPLoadPlanned(n),l.total+=l[p],b=b.concat(this.getBlockedDurations(n))},this),i.total=Ext.Array.mean(b)||0,f.total=d.total>0?e.total/d.total:0,m.total=d.total>0?c.total/d.total:0,this.data=[d,e,f,c,m,g,h,i,j],this.showPIPMetrics&&(this.data=this.data.concat([k,l])),this.data},getDisplayedData:function(){var a=this.getData(),b=Ext.Array.filter(a,function(a){return!a.hidden});return b},_getTotal:function(a){var b=this.getData(),c=_.find(b,function(b){return b.key==a});return c&&c.total},getPlannedPointsTotal:function(){return this._getTotal("plannedPoints")},getPlannedAcceptedPointsTotal:function(){return this._getTotal("plannedAcceptedPoints")},getPlannedAcceptanceRatioTotal:function(){return this._getTotal("plannedAcceptanceRatio")},getAcceptedPointsTotal:function(){return this._getTotal("acceptedPoints")},getAcceptanceRatioTotal:function(){return this._getTotal("acceptanceRatio")},getPointsAfterCommitmentTotal:function(){return this._getTotal("pointsAfterCommitment")},getDaysBlockedTotal:function(){return this._getTotal("daysBlocked")},getBlockerResolutionTotal:function(){return this._getTotal("avgBlockerResolution")},getDefectsClosedTotal:function(){return this._getTotal("defectsClosedByTag")},getPIPlanVelocityTotal:function(){return this._getTotal("piVelocityPlanned")},getPIPlanLoadTotal:function(){return this._getTotal("piLoadPlanned")},getBlockedDurations:function(a){return this.calculatedData[a]||this._calculate(a),this.calculatedData[a].blockedDurations||0},getPlannedPoints:function(a){return this.calculatedData[a]||this._calculate(a),this.calculatedData[a].plannedPoints||0},getAcceptedPoints:function(a){return this.calculatedData[a]||this._calculate(a),this.calculatedData[a].acceptedPoints||0},getAcceptanceRatio:function(a){return this.calculatedData[a]||this._calculate(a),this.calculatedData[a].plannedPoints>0?this.calculatedData[a].acceptedPoints/this.calculatedData[a].plannedPoints:0},getPlannedAcceptanceRatio:function(a){return this.calculatedData[a]||this._calculate(a),this.calculatedData[a].plannedPoints>0?this.calculatedData[a].plannedAcceptedPoints/this.calculatedData[a].plannedPoints:0},getPlannedAcceptedPoints:function(a){return this.calculatedData[a]||this._calculate(a),this.calculatedData[a].plannedAcceptedPoints||0},getPointsAddedAfterCommitment:function(a){return this.calculatedData[a]||this._calculate(a),Math.max(this.calculatedData[a].acceptedPoints-this.calculatedData[a].plannedPoints||0,0)},getDaysBlocked:function(a){return this.calculatedData[a]||this._calculate(a),this.calculatedData[a].blockedDays||0},getAverageBlockerResolution:function(a){return this.calculatedData[a]||this._calculate(a),this.calculatedData[a].averageBlockedResolutionTime||0},getDefectsClosedByTag:function(a){return this.calculatedData[a]||this._calculate(a),this.calculatedData[a].defectsClosed||0},getPIPVelocityPlanned:function(a){return this.calculatedData[a]||this._calculate(a),Number(this.calculatedData[a].piPlanVelocity)||0},getPIPLoadPlanned:function(a){return this.calculatedData[a]||this._calculate(a),this.calculatedData[a].piPlanLoad||0},_filterSnapshots:function(a){var b=this.project.ObjectID;return _.reduce(a,function(a,c){var d=c.get("Project").ObjectID;if(d===b){var e=c.get("Iteration");a[e]||(a[e]=[]),a[e].push(c.getData())}return a},{})},_filterIterations:function(a){var b=this.project.ObjectID;return _.reduce(a,function(a,c){var d=c.get("Project")&&c.get("Project").ObjectID;if(d===b){var e=c.get("Name").replace(/[^a-z0-9]/gi," ");a[e]=c.getData()}return a},{})},_filterIterationRevisions:function(a){if(a&&0!=a.length){var b=_.reduce(a,function(a,b){var c=b.get("RevisionHistory")&&b.get("RevisionHistory").ObjectID;return c&&(a[c]||(a[c]=[]),a[c].push(b.getData())),a},{});_.each(this.iterationByName,function(a){var c=a.RevisionHistory&&a.RevisionHistory.ObjectID,d=b[c]||[];a.__iterationPlannedVelocities=this._calculateIterationVelocities(a,d)},this)}},_calculateIterationVelocities:function(a,b){if(0==b.length)return[{updateDate:a.CreationDate,plannedVelocity:a.PlannedVelocity||0}];var d=[{updateDate:a.CreationDate,plannedVelocity:0}],e=0,f=new RegExp(/PLANNED VELOCITY (added|removed) \[([0-9]*\.[0-9]*) Points\]/g),g=new RegExp(/PLANNED VELOCITY (changed from) \[([0-9]*\.[0-9]*) Points\] to \[([0-9]*\.[0-9]*) Points\]/g);return _.each(b,function(a){var b=(a.Description,f.exec(a.Description));b?"removed"==b[1]?(d[e].plannedVelocity=b[2],d.push({updateDate:a.CreationDate,value:0}),e++):(d.push({updateDate:a.CreationDate,value:b[2]}),e++):(c=g.exec(a.Description),c&&(d[e].plannedVelocity=c[2],d.push({updateDate:a.CreationDate,value:c[3]}),e++))}),d},_clearData:function(){this.data=null,this.calculatedData={}}}),Ext.define("CArABU.app.safeDeliveryMetrics",{extend:"Rally.app.App",componentCls:"app",logger:new CArABU.technicalservices.Logger,defaults:{margin:10},integrationHeaders:{name:"CArABU.app.TSApp"},config:{defaultSettings:{daysOffsetFromIterationStart:0,defectTag:null,daysOffsetFromPIStart:0,precision:2,showPIPMetrics:!0}},releaseFetchList:["ObjectID","Project","Name","ReleaseStartDate","Children"],launch:function(){return this.logger.log("this.",this._hasScope(),this.getSettings()),this._hasScope()?void this._update():void this._addAppMessage("This app is designed to run on a Release scoped dashboard.<br/><br/>Please select <em>Edit Page...</em> from the Page Settings and set the <em>Show Filter</em> setting to Release.")},_update:function(){this.removeAll();var a=this.getReleaseTimeboxRecord();return this.logger.log("_update ",a),a?(this.setLoading(!0),void Deft.Chain.pipeline([this._fetchIterations,this._fetchIterationRevisions,this._fetchReleases,this._fetchSnapshots],this,{}).then({success:this._buildDisplay,failure:this._showErrorNotification,scope:this}).always(function(){this.setLoading(!1)},this)):void this._addAppMessage("Please select a Release.")},_showErrorNotification:function(a){Rally.ui.notify.Notifier.showError({message:a})},_fetchReleases:function(a){var b=Ext.create("Deft.Deferred");this.logger.log("_fetchReleases",a);var c=this.getReleaseTimeboxRecord(),d=[{property:"Name",value:c.get("Name")},{property:"ReleaseStartDate",value:c.get("ReleaseStartDate")},{property:"ReleaseDate",value:c.get("ReleaseDate")},{property:"Project.Children.ObjectID",value:""}];return Ext.create("Rally.data.wsapi.Store",{model:"Release",filters:d,fetch:this.releaseFetchList,limit:"Infinity",pageSize:2e3}).load({callback:function(c,d){d.wasSuccessful()?(a.releases=c,b.resolve(a)):b.reject("ERROR loading Releases: "+d.error&&d.error.errors.join(","))}}),b.promise},_fetchIterations:function(a){var b=Ext.create("Deft.Deferred"),c=this.getReleaseTimeboxRecord(),d=[{property:"EndDate",operator:">",value:c.get("ReleaseStartDate")},{property:"StartDate",operator:"<",value:c.get("ReleaseDate")},{property:"Project.Children.ObjectID",value:""}];return Ext.create("Rally.data.wsapi.Store",{model:"Iteration",filters:d,fetch:["ObjectID","Project","Name","StartDate","EndDate","RevisionHistory","PlannedVelocity","CreationDate"],limit:"Infinity",pageSize:2e3,sorters:[{property:"StartDate",direction:"ASC"}]}).load({callback:function(c,d){d.wasSuccessful()?(a.iterations=c,b.resolve(a)):b.reject("ERROR loading ITerations: "+d.error&&d.error.errors.join(","))}}),b.promise},_fetchIterationRevisions:function(a){var b=Ext.create("Deft.Deferred");if(this.getShowPIPMetrics()){var c=_.map(a.iterations,function(a){return{property:"RevisionHistory.ObjectID",value:a.get("RevisionHistory").ObjectID}});c=Rally.data.wsapi.Filter.or(c),this.logger.log("filters",c.toString()),c=c.and({property:"Description",operator:"contains",value:"PLANNED VELOCITY"}),Ext.create("Rally.data.wsapi.Store",{model:"Revision",filters:c,fetch:["ObjectID","RevisionHistory","Description","CreationDate"],limit:"Infinity",pageSize:2e3,enablePostGet:!0,sorters:[{property:"CreationDate",direction:"ASC"}]}).load({callback:function(c,d){d.wasSuccessful()?(a.iterationRevisions=c,b.resolve(a)):b.reject("ERROR loading iteration revisions: "+d.error&&d.error.errors.join(","))}})}else a.iterationRevisions=[],b.resolve(a);return b.promise},_fetchSnapshots:function(a){var b=Ext.create("Deft.Deferred"),c=new Date("2999-01-01"),d=new Date("1900-01-01"),e=[];return _.each(a.iterations,function(a){a.get("StartDate")<c&&(c=a.get("StartDate")),a.get("EndDate")>d&&(d=a.get("EndDate")),e.push(a.get("ObjectID"))}),this.logger.log("_fetchSnapshots -- ",e,c,d),Ext.create("Rally.data.lookback.SnapshotStore",{fetch:["FormattedID","ObjectID","Project","Iteration","PlanEstimate","AcceptedDate","Blocked","_ValidFrom","_ValidTo","_TypeHierarchy","Tags"],find:{_TypeHierarchy:{$in:["Defect","HierarchicalRequirement"]},Iteration:{$in:e},_ValidTo:{$gte:c},_ProjectHierarchy:this.getContext().getProject().ObjectID},hydrate:["_TypeHierarchy","Project"],limit:"Infinity",removeUnauthorizedSnapshots:!0,sort:{_ValidFrom:1}}).load({callback:function(c,d){d.wasSuccessful()?(a.snapshots=c,b.resolve(a)):b.reject("Error loading snapshots: "+d.error&&d.error.errors.join(","))}}),b.promise},_buildDisplay:function(a){this.logger.log("_buildDisplay",a);var b=[],c=[],d=_.sortBy(a.releases,function(a){return a.get("Project").Name});_.each(d,function(d){var e=d.get("Project"),f=Ext.create("CArABU.app.utils.teamMetricsCalculator",{project:e,release:d.getData(),iterations:a.iterations,snapshots:a.snapshots,iterationRevisions:a.iterationRevisions,daysOffsetFromIterationStart:this.getdaysOffsetFromIterationStart(),daysOffsetFromPIStart:this.getDaysOffsetFromPIStart(),defectTag:this.getDefectTag(),showPIPMetrics:this.getShowPIPMetrics()});b.push(this._addTeamGrid(f.getDisplayedData(),e.Name)),c.push(f)},this),this.add({xtype:"container",layout:{type:"hbox",pack:"end"},items:[{xtype:"rallybutton",iconCls:"icon-export",cls:"secondary rly-small",handler:this._export,scope:this},{xtype:"rallybutton",text:"Teams",itemId:"teamsBtn",margin:"0 0 0 25",pressed:!0,cls:"primary rly-small",toggleGroup:"tabView",toggleHandler:this._tabChange,style:{borderBottomRightRadius:0,borderTopRightRadius:0},scope:this},{xtype:"rallybutton",text:"Summary",itemId:"summaryBtn",margin:"0 25 0 0",cls:"secondary rly-small",toggleGroup:"tabView",style:{borderBottomLeftRadius:0,borderTopLeftRadius:0},toggleHandler:this._tabChange,scope:this}]});var e=Ext.create("Ext.tab.Panel",{layout:"fit",overflowX:"hidden",overflowY:"hidden",activeTab:0,itemId:"tabs",tabBar:{hidden:!0},border:!1,items:[{xtype:"panel",overflowY:"hidden",border:!1,itemId:"teamsTab",padding:"8px 0 0 0",items:b,title:"Teams"},{xtype:"panel",overflowY:"hidden",title:"Summary",border:!1,itemId:"summaryTab",padding:"8px 0 0 0",items:[this._getSummaryGrid(c)]}]});this.add(e)},_tabChange:function(a,b){this.logger.log("_tabChange",a,b),b?(a.addCls("primary"),a.removeCls("secondary"),this.down("#tabs").setActiveTab(a.itemId.replace("Btn","Tab"))):(a.addCls("secondary"),a.removeCls("primary"))},_export:function(){var a=this.down("#tabs").getActiveTab().itemId;"teamsTab"===a?this._exportTeams():this._exportSummary()},_exportTeams:function(){this.logger.log("_exportTeams");var a=this.down("#teamsTab").query("rallygrid"),b=[];_.each(a,function(a){var c=a.getColumnCfgs(),d=["Team"].concat(_.pluck(c,"text"));b.push('"'+d.join('","')+'"'),a.getStore().each(function(d){var e=[a.title];_.each(c,function(a){e.push(d.get(a.dataIndex))}),b.push(e.join(","))}),b.push("")});var c=Ext.String.format("team-detail-{0}.csv",Rally.util.DateTime.format(new Date,"Y-m-d-h-i-s"));TSUtilities.saveCSVToFile(b.join("\r\n"),c)},_exportSummary:function(){this.logger.log("_exportSummary");var a=this.down("#summaryTab").query("rallygrid"),b=[];if(a&&a.length>0){a=a[0];var c=a.getColumnCfgs(),d=_.pluck(c,"text");b.push('"'+d.join('","')+'"'),a.getStore().each(function(a){var d=_.map(c,function(b){return a.get(b.dataIndex)});b.push(d.join(","))});var e=Ext.String.format("summary-{0}.csv",Rally.util.DateTime.format(new Date,"Y-m-d-h-i-s"));TSUtilities.saveCSVToFile(b.join("\r\n"),e)}},_getSummaryGrid:function(a){var b=[];_.each(a,function(a){var c=a.project,d={project:c.Name,plannedPoints:a.getPlannedPointsTotal(),plannedAcceptedPoints:a.getPlannedAcceptedPointsTotal(),pointsAccepted:a.getAcceptedPointsTotal(),acceptanceRatio:a.getAcceptanceRatioTotal(),plannedAcceptanceRatio:a.getPlannedAcceptanceRatioTotal(),pointsAdded:a.getPointsAfterCommitmentTotal(),daysBlocked:a.getDaysBlockedTotal(),blockerResolution:a.getBlockerResolutionTotal(),defectsClosed:a.getDefectsClosedTotal(),piPlanVelocity:a.getPIPlanVelocityTotal(),piPlanLoad:a.getPIPlanLoadTotal()};b.push(d)}),this.logger.log("data",b);var c=Ext.create("Rally.data.custom.Store",{fields:Ext.Object.getKeys(b[0]),data:b,pageSize:b.length});return Ext.widget({xtype:"rallygrid",store:c,title:"Summary",features:[{ftype:"summary"}],columnCfgs:this._getSummaryColumnCfgs(b),showPagingToolbar:!1,showRowActionsColumn:!1,margin:"25 0 25 0"})},_addTeamGrid:function(a,b){this.logger.log("_addTeamGrid",a);var c=Ext.Object.getKeys(a[0]),d=Ext.create("Rally.data.custom.Store",{fields:c,data:a,pageSize:a.length});return Ext.widget({xtype:"rallygrid",store:d,title:b,margin:"15 0 25 0",columnCfgs:this._getColumnCfgs(a),showPagingToolbar:!1,showRowActionsColumn:!1})},_getColumnCfgs:function(a){var b=[{dataIndex:"name",text:"Metric",flex:2}],c=["name","key","project","total","isPercent"];return this.logger.log("_getColumnCfgs",a),_.each(Ext.Object.getKeys(a[0]),function(a){Ext.Array.contains(c,a)||b.push({dataIndex:a,text:a,renderer:this._numberRenderer,flex:1})},this),b.push({dataIndex:"total",text:"Total",renderer:this._numberTotalRenderer,flex:1}),b},_numberTotalRenderer:function(a,b,c){return c.get("isPercent")===!0&&(a=Math.round(100*a)+"%"),isNaN(a)||a%1===0||(a=a.toFixed(2)),'<div class="app-summary">'+a+"</div>"},_numberRenderer:function(a,b,c,d,e){return c.get("isPercent")===!0?Math.round(100*a)+"%":isNaN(a)||a%1===0?a:a.toFixed(2)},_getSummaryColumnCfgs:function(a){var b=[{dataIndex:"project",text:"Team",flex:3,summaryType:"count",summaryRenderer:function(a,b,c){return Ext.String.format('<div class="app-summary">{0} Team{1} Total</div>',a,1!==a?"s":"")}},{dataIndex:"plannedPoints",text:"Points Planned",flex:1,summaryType:"sum",summaryRenderer:function(a,b,c){return Ext.String.format('<div class="app-summary">{0}</div>',a)}},{dataIndex:"pointsAccepted",text:"Points Accepted",flex:1,summaryType:"sum",summaryRenderer:function(a,b,c){return Ext.String.format('<div class="app-summary">{0}</div>',a)}},{dataIndex:"plannedAcceptedPoints",text:"Planned Accepted Points",flex:1,summaryType:"sum"},{dataIndex:"pointsAdded",text:"Points Added after Commitment",flex:1,summaryType:"sum",summaryRenderer:function(a,b,c){return Ext.String.format('<div class="app-summary">{0}</div>',a)}},{dataIndex:"plannedAcceptanceRatio",text:"Planned Point Acceptance Rate",flex:1,renderer:function(a,b,c){return Math.round(100*a)+"%"},summaryType:"average",flex:1,summaryRenderer:function(a,b,c,d){return c.data.plannedPoints>0&&c.data.plannedAcceptedPoints>0?'<div class="app-summary">'+Math.round(c.data.plannedAcceptedPoints/c.data.plannedPoints*100)+"%</div>":"--"}},{dataIndex:"acceptanceRatio",text:"Point Acceptance Rate",flex:1,renderer:function(a,b,c){return Math.round(100*a)+"%"},summaryType:"average",flex:1,summaryRenderer:function(a,b,c,d){return c.data.plannedPoints>0&&c.data.pointsAccepted>0?'<div class="app-summary">'+Math.round(c.data.pointsAccepted/c.data.plannedPoints*100)+"%</div>":"--"}},{dataIndex:"daysBlocked",text:"Days Blocked",flex:1,summaryType:"sum",renderer:function(a){return a?Math.round(100*a)/100:a},summaryRenderer:function(a,b,c){return Ext.String.format('<div class="app-summary">{0}</div>',a)}},{dataIndex:"blockerResolution",text:"Average Days to Resolve Blockers",flex:1,summaryType:"average",renderer:this._numberRenderer,summaryRenderer:function(a,b,c){return a>0&&(a=a.toFixed(2)),Ext.String.format('<div class="app-summary">{0}</div>',a)}},{dataIndex:"defectsClosed",text:"Total number of Defects Closed",flex:1,summaryType:"sum",summaryRenderer:function(a,b,c){return Ext.String.format('<div class="app-summary">{0}</div>',a)}}];return this.getShowPIPMetrics()&&(b=b.concat([{dataIndex:"piPlanVelocity",text:"Total PI Plan Velocity",flex:1,summaryType:"sum",summaryRenderer:function(a,b,c){return Ext.String.format('<div class="app-summary">{0}</div>',a)}},{dataIndex:"piPlanLoad",text:"Total PI Plan Load",flex:1,summaryType:"sum",summaryRenderer:function(a,b,c){return Ext.String.format('<div class="app-summary">{0}</div>',a)}}])),b},_addAppMessage:function(a){this.add({html:Ext.String.format('<div class="app-msg">{0}</div>',a),xtype:"panel",layout:"fit",frameHeader:!1,region:"north"})},_hasScope:function(){var a=this.getContext();return a.getTimeboxScope()&&"release"===a.getTimeboxScope().getType().toLowerCase()},onTimeboxScopeChange:function(a){this.logger.log("onTimeboxScopeChange",a),a&&"release"===a.type.toLowerCase()&&(this.getContext().setTimeboxScope(a),this._update())},getReleaseTimeboxRecord:function(){return this._hasScope()?this.getContext().getTimeboxScope()&&this.getContext().getTimeboxScope().getRecord()||null:null},getdaysOffsetFromIterationStart:function(){return this.getSetting("daysOffsetFromIterationStart")},getShowPIPMetrics:function(){return this.getSetting("showPIPMetrics")},getDefectTag:function(){return this.getSetting("defectTag")},getDaysOffsetFromPIStart:function(){return this.getSetting("daysOffsetFromPIStart")},getSettingsFields:function(){var a=this.getSetting("defectTag");return this.logger.log("defectTags",a),[{name:"daysOffsetFromIterationStart",xtype:"rallynumberfield",minValue:0,maxValue:30,fieldLabel:"Days Offset From Iteration Start",labelAlign:"right",margin:10,labelWidth:200},{name:"daysOffsetFromPIStart",xtype:"rallynumberfield",minValue:0,maxValue:30,fieldLabel:"Days Offset From PI Start",labelAlign:"right",margin:10,labelWidth:200},{name:"showPIPMetrics",fieldLabel:"Show PIP metrics",xtype:"rallycheckboxfield",labelAlign:"right",checked:this.getSetting("showPIPMetrics"),margin:10,labelWidth:200},{name:"defectTag",xtype:"enhancedtagselector",fieldLabel:"",value:this.getSetting("defectTag"),width:"100%"}]},getOptions:function(){var a=[{text:"About...",handler:this._launchInfo,scope:this}];return a},_launchInfo:function(){this.about_dialog&&this.about_dialog.destroy(),this.about_dialog=Ext.create("Rally.technicalservices.InfoLink",{showLog:this.getSetting("saveLog"),logger:this.logger})},isExternal:function(){return"undefined"==typeof this.getAppId()}});

               Rally.launchApp('CArABU.app.safeDeliveryMetrics', {
                   name: 'SAFe Delivery Metrics'
               });
        });
    </script>

    <style type="text/css">

.app {
   background-color: #fff;
}
.tsinfolink {
    position:absolute;
    right:0px;
    width: 14px;
    height: 14px;
    border-radius: 7px;
    text-align: center;
    color: white;
    background: #C0C0C0;
    border-style: solid;
    border-width: 1px;
    margin-top: 25px;
    margin-right: 5px;
    cursor: pointer;
}

.app-msg {
   font-family: ProximaNova,helvetica,sans-serif;
   font-size: 14px;
   color: #666;
   text-align: center;
}
.app-panel .x-panel-header-text {
   font-family: ProximaNovaSemiBold,Helvetica,Arial;
   color: #555;
}
.summary-cell {
  
}



.rally-grid .x-panel-header-text-default {
   font-size: 12px;
   font-family: ProximaNovaSemiBold,Helvetica,Arial;
}


.app-summary {
  font-family: ProximaNovaSemiBold,Helvetica,Arial;
  text-transform: uppercase;
}

.tag-btn {

     background-color: #c4d8e8;
     color: #222!important;
     border-color: #c4d8e8;
     font-family: ProximaNova,Helvetica,Arial;
     font-size: 11px;
}

.tag-btn .x-btn-inner {
   color: #222!important;
}

.app-settings .settings-form label {
   vertical-align: top;
}

    </style>

</head>
<body></body>
</html>