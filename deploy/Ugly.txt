<!DOCTYPE html>
<html>
<head>
    <title>CATS-SAFe Delivery Metrics-0.1</title>
    <!--  (c) 2017 CA Technologies.  All Rights Reserved. -->
    <!--  Build Date: Fri Nov 10 2017 09:49:48 GMT-0700 (MST) -->

    <script type="text/javascript">
        var APP_BUILD_DATE = "Fri Nov 10 2017 09:49:48 GMT-0700 (MST)";
        var ARTIFACT = "F391";
        var BUILDER  = "corkr03";
        var CHECKSUM = 14000854833;
    </script>

    <script type="text/javascript" src="/apps/2.1/sdk.js"></script>
    <!-- our highcharts (needed so that we can add patterns)
    <script type="text/javascript" src="/apps/2.1/lib/analytics/analytics-all.js"></script>
    -->


    <script type="text/javascript">
        Rally.onReady(function() {
            Ext.define("Rally.technicalservices.InfoLink",{extend:"Rally.ui.dialog.Dialog",alias:"widget.tsinfolink",informationHtml:null,title:"Build Information",defaults:{padding:5,margin:5},closable:!0,draggable:!0,autoShow:!0,width:350,informationalConfig:null,showLog:!1,logger:null,items:[{xtype:"container",itemId:"information"},{xtype:"container",itemId:"button_box"}],initComponent:function(){Ext.id(this);this.title="<span class='icon-help'> </span>"+this.title,this.callParent(arguments)},_generateChecksum:function(a){var b,c=305419896;for(a=a.replace(/var CHECKSUM = .*;/,""),a=a.replace(/var BUILDER  = .*;/,""),a=a.replace(/\s/g,""),b=0;b<a.length;b++)c+=a.charCodeAt(b)*b;return c},_checkChecksum:function(a){var b=Ext.create("Deft.Deferred"),c=this;return Ext.Ajax.request({url:document.URL,params:{id:1},success:function(a){if(text=a.responseText,CHECKSUM){var d=c._generateChecksum(text);if(CHECKSUM!==d)return void b.resolve(!1)}b.resolve(!0)}}),b.promise},_addToContainer:function(a){var b=Ext.apply({xtype:"container",height:200,overflowY:!0},this.informationalConfig);a.add(b)},afterRender:function(){var a=Rally.getApp();if(!Ext.isEmpty(this.informationalConfig)){var b=this.down("#information");this._addToContainer(b)}this.showLog&&this.logger&&this.down("#button_box").add({xtype:"rallybutton",text:"Show Log",listeners:{scope:this,click:function(){this.logger.displayLog()}}}),a.isExternal()?this.addDocked({xtype:"container",cls:"build-info",padding:2,dock:"bottom",html:"... Running externally"}):this._checkChecksum(a).then({scope:this,success:function(a){a||this.addDocked({xtype:"container",cls:"build-info",dock:"bottom",padding:2,html:'<span class="icon-warning"> </span>Checksums do not match'})},failure:function(a){console.log("oops:",a)}}),this.callParent(arguments)},beforeRender:function(){if(this.callParent(arguments),this.informationHtml&&this.addDocked({xtype:"component",componentCls:"intro-panel",padding:2,html:this.informationHtml,dock:"bottom"}),this.addDocked({xtype:"container",cls:"build-info",padding:2,dock:"bottom",html:"This app was created by the CA AC Technical Services Team."}),APP_BUILD_DATE){var a=Ext.String.format("Built on: {0} <br/>Built by: {1}",APP_BUILD_DATE,BUILDER);ARTIFACT&&(a=a+"<br/>Source artifact: "+ARTIFACT),this.addDocked({xtype:"container",cls:"build-info",padding:2,dock:"top",html:a})}}}),Ext.define("CArABU.technicalservices.Logger",{saveForLater:!1,saveLines:100,logArray:[],constructor:function(a){Ext.apply(this,a)},setSaveForLater:function(a){this.saveForLater=a},log:function(a){var b="[ "+Ext.util.Format.date(new Date,"Y-m-d H:i:s.u")+" ]",c=[];c=Ext.Array.push(c,[b]),c=Ext.Array.push(c,Ext.Array.slice(arguments,0)),this.saveForLater&&(this.logArray||(this.logArray=[]),this.logArray.push(c.join(" ")),this.logArray.length>this.saveLines&&this.logArray.shift()),window.console&&console.log.apply(console,c)},getLogText:function(){return this.logArray&&0!==this.logArray.length?this.logArray.join("<br/>"):"-- no log --"},displayLog:function(){var a=this.getLogText();this.popup=Ext.create("Rally.ui.dialog.Dialog",{width:Ext.getBody().getWidth()-20,height:Ext.getBody().getHeight()-20,closable:!0,title:"Log",autoShow:!0,layout:"border",defaults:{layout:"fit",width:"50%",border:!1},items:[{region:"center",xtype:"container",html:a,autoScroll:!0}]})}}),Ext.define("TSUtilities",{singleton:!0,loadWsapiRecords:function(a){var b=Ext.create("Deft.Deferred"),c={model:"Defect",fetch:["ObjectID"]};return Ext.create("Rally.data.wsapi.Store",Ext.Object.merge(c,a)).load({callback:function(a,c,d){d?b.resolve(a):(console.error("Failed: ",c),b.reject("Problem loading: "+c.error.errors.join(". ")))}}),b.promise},loadAStoreWithAPromise:function(a,b){var c=Ext.create("Deft.Deferred");return Ext.create("Rally.data.wsapi.Store",{model:a,fetch:b}).load({callback:function(a,b,d){d?c.resolve(this):(console.error("Failed: ",b),c.reject("Problem loading: "+b.error.errors.join(". ")))}}),c.promise}}),Ext.define("CArABU.utils.panel.SummaryPanel",{extend:"Ext.panel.Panel",alias:"widget.summarypanel",title:"Summary",collapsible:!0,cls:"app-panel",layout:"fit",initComponent:function(){this.callParent(),console.log("config",this)}}),Ext.define("CArABU.utils.panel.TeamDetailPanel",{extend:"Ext.container.Container",alias:"widget.teamdetailpanel",autoScroll:!0,initComponent:function(){this.items=this._buildPanel(),this.on("boxready",this.onBoxReady,this),this.callParent()},onBoxReady:function(a,b,c){console.log("this",b,c)},_buildPanel:function(){console.log("_buildPanel",this.rendered);var a=[];return _.each(this.releases,function(b){var c=b.get("Project"),d=Ext.create("CArABU.app.utils.teamMetricsCalculator",{project:c,iterations:this.iterations,snapshots:this.snapshots});a.push(this._addTeamGrid(d.getData(),c.Name)),console.log("project",c)},this),[{width:"100%",layout:{type:"vbox"},items:a}]},_addTeamGrid:function(a,b){var c=(Ext.Object.getKeys(a[0]),Ext.create("Rally.data.custom.Store",{data:a,pageSize:a.length}));return Ext.widget({xtype:"rallygrid",store:c,title:b,flex:1,columnCfgs:this._getColumnCfgs(a),showPagingToolbar:!1,showRowActionsColumn:!1})},_addGroupedTeamGrid:function(a){var b=(Ext.Object.getKeys(a[0]),Ext.create("Rally.data.custom.Store",{data:a,pageSize:a.length,groupField:"name"}));return console.log("data",a),{xtype:"rallygrid",store:b,features:{ftype:"grouping"},columnCfgs:this._getColumnCfgs(a),showPagingToolbar:!1,showRowActionsColumn:!1}},_getColumnCfgs:function(a){var b=[{dataIndex:"name",text:"Metric"}];return _.each(Ext.Object.getKeys(a[0]),function(a){"name"!==a&&"total"!==a&&"project"!==a&&b.push({dataIndex:a,text:a})}),b.push({dataIndex:"total",text:"Total"}),b}}),Ext.define("CArABU.app.utils.teamMetricsCalculator",{constructor:function(a){this.project=a.project||{},this.iterationByName=this._filterIterations(a.iterations),this.snapshotsByIterationOid=this._filterSnapshots(a.snapshots),this.calculatedData={},this.hoursOffsetFromIterationStart=a.hoursOffsetFromIterationStart||0,console.log("iterations",this.iterationByName,this.snapshotsByIterationOid)},setHoursOffsetFromIterationStart:function(a){a!=this.hoursOffsetFromIterationStart&&(this.hoursOffsetFromIterationStart=a,this.calculatedData={})},_calculate:function(a){var b=this.iterationByName[a],c=this.hoursOffsetFromIterationStart,d={plannedPoints:0,acceptedPoints:0};b||(this.calculatedData[a]={});for(var e=Rally.util.DateTime.add(b.StartDate,"hour",c),f=this.snapshotsByIterationOid[b.ObjectID]||[],g=0;g<f.length;g++){var h=f[g],i=Rally.util.DateTime.fromIsoString(h._ValidFrom),j=Rally.util.DateTime.fromIsoString(h._ValidTo);e>=i&&j>e&&(d.plannedPoints+=h.PlanEstimate),j>new Date&&h.AcceptedDate.length>0&&(d.acceptedPoints+=h.PlanEstimate)}this.calculatedData[a]=d},getData:function(){var a="xx",b={name:"Planned Points",total:0,project:this.project.Name},c={name:"Accepted Points",total:0,project:this.project.Name},d={name:"Acceptance Ratio",total:0,project:this.project.Name},e={name:"Points After Commitment",total:0,project:this.project.Name},f={name:"Days Blocked",total:0,project:this.project.Name},g={name:"Average Blocker Resolution",total:0,project:this.project.Name},h={name:"Defects Closed",total:0,project:this.project.Name},i={name:"PIP Velocity",total:0,project:this.project.Name},j={name:"PIP Load",total:0,project:this.project.Name};return Ext.Object.each(this.iterationByName,function(k,l){var m=k;b[m]=this.getPlannedPoints(k),c[m]=this.getAcceptedPoints(k),d[m]=this.getAcceptanceRatio(k),e[m]=this.getPointsAddedAfterCommitment(k),f[m]=this.getDaysBlocked(k),g[m]=this.getAverageBlockerResolution(k),h[m]=this.getDefectsClosedByTag(k,a),i[m]=this.getPIPVelocityPlanned(k),j[m]=this.getPIPLoadPlanned(k)},this),[b,c,d,e,f,g,h,i,j]},getPlannedPoints:function(a){return this.calculatedData[a]||this._calculate(a),this.calculatedData[a].plannedPoints||0},getAcceptedPoints:function(a){return this.calculatedData[a]||this._calculate(a),this.calculatedData[a].acceptedPoints||0},getAcceptanceRatio:function(a){return this.calculatedData[a]||this._calculate(a),this.calculatedData[a].plannedPoints>0?this.calculatedData[a].acceptedPoints/this.calculatedData[a].plannedPoints:0},getPointsAddedAfterCommitment:function(a){return 1},getDaysBlocked:function(a){return 1},getAverageBlockerResolution:function(a){return 1},getDefectsClosedByTag:function(a,b){return 1},getPIPVelocityPlanned:function(a){return 1},getPIPLoadPlanned:function(a){return 1},_filterSnapshots:function(a){var b=this.project.ObjectID;return _.reduce(a,function(a,c){var d=c.get("Project").ObjectID;if(d===b){var e=c.get("Iteration");a[e]||(a[e]=[]),a[e].push(c.getData())}return a},{})},_filterIterations:function(a){var b=this.project.ObjectID;return _.reduce(a,function(a,c){var d=c.get("Project")&&c.get("Project").ObjectID;return d===b&&(a[c.get("Name")]=c.getData()),a},{})}}),Ext.define("CArABU.app.safeDeliveryMetrics",{extend:"Rally.app.App",componentCls:"app",logger:new CArABU.technicalservices.Logger,defaults:{margin:10},layout:{type:"accordion",titleCollapse:!1,animate:!0,activeOnTop:!0},integrationHeaders:{name:"CArABU.app.TSApp"},launch:function(){return this.logger.log("this.",this._hasScope()),this._hasScope()?void this._update():void this._addAppMessage("This app is designed to run on a Release scoped dashboard.<br/><br/>Please select <em>Edit Page...</em> from the Page Settings and set the <em>Show Filter</em> setting to Release.")},_update:function(){this.removeAll();var a=this.getReleaseTimeboxRecord();return this.logger.log("_update ",a),a?(this.setLoading(!0),void Deft.Chain.pipeline([this._fetchIterations,this._fetchReleases,this._fetchSnapshots],this,{}).then({success:this._buildDisplay,failure:this._showErrorNotification,scope:this}).always(function(){this.setLoading(!1)},this)):void this._addAppMessage("Please select a Release.")},_showErrorNotification:function(a){Rally.ui.notify.Notifier.showError({message:a})},_fetchReleases:function(a){var b=Ext.create("Deft.Deferred");this.logger.log("_fetchReleases",a);var c=this.getReleaseTimeboxRecord(),d=[{property:"Name",value:c.get("Name")},{property:"ReleaseStartDate",value:c.get("ReleaseStartDate")},{property:"ReleaseDate",value:c.get("ReleaseDate")}];return Ext.create("Rally.data.wsapi.Store",{model:"Release",filters:d,fetch:["ObjectID","Project","Name"],limit:"Infinity",pageSize:2e3}).load({callback:function(c,d){d.wasSuccessful()?(a.releases=c,b.resolve(a)):b.reject("ERROR loading Releases: "+d.error&&d.error.errors.join(","))}}),b.promise},_fetchIterations:function(a){var b=Ext.create("Deft.Deferred"),c=this.getReleaseTimeboxRecord(),d=[{property:"EndDate",operator:">",value:c.get("ReleaseStartDate")},{property:"StartDate",operator:"<",value:c.get("ReleaseDate")}];return Ext.create("Rally.data.wsapi.Store",{model:"Iteration",filters:d,fetch:["ObjectID","Project","Name","StartDate","EndDate"],limit:"Infinity",pageSize:2e3}).load({callback:function(c,d){d.wasSuccessful()?(a.iterations=c,b.resolve(a)):b.reject("ERROR loading ITerations: "+d.error&&d.error.errors.join(","))}}),b.promise},_fetchSnapshots:function(a){var b=Ext.create("Deft.Deferred"),c=_.map(a.releases,function(a){return a.get("ObjectID")});this.logger.log("_fetchSnapshots ",c);var d=this.getReleaseTimeboxRecord().get("ReleaseStartDate"),e=this.getReleaseTimeboxRecord().get("ReleaseDate");return Ext.create("Rally.data.lookback.SnapshotStore",{fetch:["ObjectID","Project","Iteration","PlanEstimate","AcceptedDate","Blocked","_ValidFrom","_ValidTo","_TypeHierarchy"],find:{_TypeHierarchy:{$in:["Defect","HierarchicalRequirement"]},Release:{$in:c},_ValidTo:{$gte:d},_ValidFrom:{$lte:e},_ProjectHierarchy:this.getContext().getProject().ObjectID},hydrate:["_TypeHierarchy","Project"],limit:"Infinity",removeUnauthorizedSnapshots:!0}).load({callback:function(c,d){d.wasSuccessful()?(a.snapshots=c,b.resolve(a)):b.reject("Error loading snapshots: "+d.error&&d.error.errors.join(","))}}),b.promise},_buildDisplay:function(a){this.logger.log("_buildDisplay",a);var b=[];_.each(a.releases,function(c){var d=c.get("Project"),e=Ext.create("CArABU.app.utils.teamMetricsCalculator",{project:d,iterations:a.iterations,snapshots:a.snapshots});b.push(this._addTeamGrid(e.getData(),d.Name)),console.log("project",d)},this),this.add({xtype:"panel",height:400*b.length,autoScroll:!0,items:b,title:"Teams"}),this.add({xtype:"panel",height:600,autoScroll:!0,title:"Summary",items:[this._getSummaryGrid(a)]})},_getSummaryGrid:function(a){var b=[];_.each(a.releases,function(a){var c=a.get("Project").Name;b.push({project:c,pointsPlanned:1,pointsAccepted:1,acceptanceRatio:1,pointsAdded:0,daysBlocked:0,blockerResolution:0,defectsClosed:0})}),this.logger.log("data",b,a);var c=Ext.create("Rally.data.custom.Store",{fields:["project","pointsPlanned","pointsAccepted","acceptanceRatio","testCases","automatedTestCases","pctTestsAutomated","pointsAdded","daysBlocked","blockerResolution","defectsClosed"],data:b,pageSize:a.length});return Ext.widget({xtype:"rallygrid",store:c,features:[{ftype:"summary"}],columnCfgs:this._getSummaryColumnCfgs(a),showPagingToolbar:!1,showRowActionsColumn:!1})},_addTeamGrid:function(a,b){var c=(Ext.Object.getKeys(a[0]),Ext.create("Rally.data.custom.Store",{data:a,pageSize:a.length}));return Ext.widget({xtype:"rallygrid",store:c,title:b,margin:"15 0 25 0",columnCfgs:this._getColumnCfgs(a),showPagingToolbar:!1,showRowActionsColumn:!1})},_addGroupedTeamGrid:function(a){var b=(Ext.Object.getKeys(a[0]),Ext.create("Rally.data.custom.Store",{data:a,pageSize:a.length,groupField:"project"}));return Ext.widget({xtype:"rallygrid",store:b,features:{ftype:"grouping"},columnCfgs:this._getColumnCfgs(a),groupHeaderTpl:"{name}",showPagingToolbar:!1,showRowActionsColumn:!1})},_getColumnCfgs:function(a){var b=[{dataIndex:"name",text:"Metric",flex:1}];return _.each(Ext.Object.getKeys(a[0]),function(a){"name"!==a&&"total"!==a&&"project"!==a&&b.push({dataIndex:a,text:a})}),b.push({dataIndex:"total",text:"Total"}),b},_getSummaryColumnCfgs:function(a){var b=[{dataIndex:"project",text:"Team",flex:1,summaryType:"count",summaryRenderer:function(a,b,c){return Ext.String.format('<div class="app-summary">{0} Team{1} Total</div>',a,1!==a?"s":"")}},{dataIndex:"pointsPlanned",text:"Points Planned",summaryType:"sum"},{dataIndex:"pointsAccepted",text:"Points Accepted",summaryType:"sum"},{dataIndex:"acceptanceRatio",text:"Point Acceptance Rate",renderer:function(a){return Math.round(100*a)+"%"},summaryType:"average"},{dataIndex:"testCases",text:"# Test Cases",summaryType:"sum"},{dataIndex:"automatedTestCases",text:"# Automated Test Cases",summaryType:"sum"},{dataIndex:"pctTestsAutomated",text:"% Tests Automated",summaryType:"average"},{dataIndex:"daysBlocked",text:"Days Blocked",summaryType:"sum"},{dataIndex:"blockerResolution",text:"Average Days to Resolve Blockers",summaryType:"sum"},{dataIndex:"defectsClosed",text:"Total number of SIs Closed",summaryType:"sum"}];return b},_addAppMessage:function(a){this.add({html:Ext.String.format('<div class="app-msg">{0}</div>',a),xtype:"panel",layout:"fit",frameHeader:!1,region:"north"})},_hasScope:function(){var a=this.getContext();return a.getTimeboxScope()&&"release"===a.getTimeboxScope().getType().toLowerCase()},onTimeboxScopeChange:function(a){this.logger.log("onTimeboxScopeChange",a),a&&"release"===a.type.toLowerCase()&&(this.getContext().setTimeboxScope(a),this._update())},getReleaseTimeboxRecord:function(){return this._hasScope()?this.getContext().getTimeboxScope()&&this.getContext().getTimeboxScope().getRecord()||null:null},getSettingsFields:function(){var a="5 0 5 0";return[{name:"saveLog",xtype:"rallycheckboxfield",boxLabelAlign:"after",fieldLabel:"",margin:a,boxLabel:'Save Logging<br/><span style="color:#999999;"><i>Save last 100 lines of log for debugging.</i></span>'}]},getOptions:function(){var a=[{text:"About...",handler:this._launchInfo,scope:this}];return a},_launchInfo:function(){this.about_dialog&&this.about_dialog.destroy(),this.about_dialog=Ext.create("Rally.technicalservices.InfoLink",{showLog:this.getSetting("saveLog"),logger:this.logger})},isExternal:function(){return"undefined"==typeof this.getAppId()}});

               Rally.launchApp('CArABU.app.safeDeliveryMetrics', {
                   name: 'SAFe Delivery Metrics'
               });
        });
    </script>

    <style type="text/css">

.app {
   background-color: #fff;
}
.tsinfolink {
    position:absolute;
    right:0px;
    width: 14px;
    height: 14px;
    border-radius: 7px;
    text-align: center;
    color: white;
    background: #C0C0C0;
    border-style: solid;
    border-width: 1px;
    margin-top: 25px;
    margin-right: 5px;
    cursor: pointer;
}

.app-msg {
   font-family: ProximaNova,helvetica,sans-serif;
   font-size: 14px;
   color: #666;
   text-align: center;
}
.app-panel .x-panel-header-text {
   font-family: ProximaNova,helvetica,sans-serif;
   color: #555;
}

.app-summary {
  font-family: ProximaNovaSemiBold,Helvetica,Arial;
  text-transform: uppercase;
}

    </style>

</head>
<body></body>
</html>