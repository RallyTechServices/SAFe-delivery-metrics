<!DOCTYPE html>
<html>
<head>
    <title>CATS-SAFe Delivery Metrics-0.1</title>
    <!--  (c) 2017 CA Technologies.  All Rights Reserved. -->
    <!--  Build Date: Thu Nov 30 2017 16:41:33 GMT-0700 (MST) -->

    <script type="text/javascript">
        var APP_BUILD_DATE = "Thu Nov 30 2017 16:41:33 GMT-0700 (MST)";
        var ARTIFACT = "F391";
        var BUILDER  = "corkr03";
        var CHECKSUM = 37129444695;
    </script>

    <script type="text/javascript" src="/apps/2.1/sdk.js"></script>
    <!-- our highcharts (needed so that we can add patterns)
    <script type="text/javascript" src="/apps/2.1/lib/analytics/analytics-all.js"></script>
    -->


    <script type="text/javascript">
        Rally.onReady(function() {
            Ext.define("Rally.technicalservices.InfoLink",{extend:"Rally.ui.dialog.Dialog",alias:"widget.tsinfolink",informationHtml:null,title:"Build Information",defaults:{padding:5,margin:5},closable:!0,draggable:!0,autoShow:!0,width:350,informationalConfig:null,showLog:!1,logger:null,items:[{xtype:"container",itemId:"information"},{xtype:"container",itemId:"button_box"}],initComponent:function(){Ext.id(this);this.title="<span class='icon-help'> </span>"+this.title,this.callParent(arguments)},_generateChecksum:function(a){var b,c=305419896;for(a=a.replace(/var CHECKSUM = .*;/,""),a=a.replace(/var BUILDER  = .*;/,""),a=a.replace(/\s/g,""),b=0;b<a.length;b++)c+=a.charCodeAt(b)*b;return c},_checkChecksum:function(a){var b=Ext.create("Deft.Deferred"),c=this;return Ext.Ajax.request({url:document.URL,params:{id:1},success:function(a){if(text=a.responseText,CHECKSUM){var d=c._generateChecksum(text);if(CHECKSUM!==d)return void b.resolve(!1)}b.resolve(!0)}}),b.promise},_addToContainer:function(a){var b=Ext.apply({xtype:"container",height:200,overflowY:!0},this.informationalConfig);a.add(b)},afterRender:function(){var a=Rally.getApp();if(!Ext.isEmpty(this.informationalConfig)){var b=this.down("#information");this._addToContainer(b)}this.showLog&&this.logger&&this.down("#button_box").add({xtype:"rallybutton",text:"Show Log",listeners:{scope:this,click:function(){this.logger.displayLog()}}}),a.isExternal()?this.addDocked({xtype:"container",cls:"build-info",padding:2,dock:"bottom",html:"... Running externally"}):this._checkChecksum(a).then({scope:this,success:function(a){a||this.addDocked({xtype:"container",cls:"build-info",dock:"bottom",padding:2,html:'<span class="icon-warning"> </span>Checksums do not match'})},failure:function(a){console.log("oops:",a)}}),this.callParent(arguments)},beforeRender:function(){if(this.callParent(arguments),this.informationHtml&&this.addDocked({xtype:"component",componentCls:"intro-panel",padding:2,html:this.informationHtml,dock:"bottom"}),this.addDocked({xtype:"container",cls:"build-info",padding:2,dock:"bottom",html:"This app was created by the CA AC Technical Services Team."}),APP_BUILD_DATE){var a=Ext.String.format("Built on: {0} <br/>Built by: {1}",APP_BUILD_DATE,BUILDER);ARTIFACT&&(a=a+"<br/>Source artifact: "+ARTIFACT),this.addDocked({xtype:"container",cls:"build-info",padding:2,dock:"top",html:a})}}}),Ext.define("CArABU.technicalservices.Logger",{saveForLater:!1,saveLines:100,logArray:[],constructor:function(a){Ext.apply(this,a)},setSaveForLater:function(a){this.saveForLater=a},log:function(a){var b="[ "+Ext.util.Format.date(new Date,"Y-m-d H:i:s.u")+" ]",c=[];c=Ext.Array.push(c,[b]),c=Ext.Array.push(c,Ext.Array.slice(arguments,0)),this.saveForLater&&(this.logArray||(this.logArray=[]),this.logArray.push(c.join(" ")),this.logArray.length>this.saveLines&&this.logArray.shift()),window.console&&console.log.apply(console,c)},getLogText:function(){return this.logArray&&0!==this.logArray.length?this.logArray.join("<br/>"):"-- no log --"},displayLog:function(){var a=this.getLogText();this.popup=Ext.create("Rally.ui.dialog.Dialog",{width:Ext.getBody().getWidth()-20,height:Ext.getBody().getHeight()-20,closable:!0,title:"Log",autoShow:!0,layout:"border",defaults:{layout:"fit",width:"50%",border:!1},items:[{region:"center",xtype:"container",html:a,autoScroll:!0}]})}}),Ext.define("TSUtilities",{singleton:!0,loadWsapiRecords:function(a){var b=Ext.create("Deft.Deferred"),c={model:"Defect",fetch:["ObjectID"],pageSize:2e3,limit:"Infinity"};return Ext.create("Rally.data.wsapi.Store",Ext.Object.merge(c,a)).load({callback:function(a,c,d){d?b.resolve(a):b.reject("Problem loading: "+c.error.errors.join(". "))}}),b.promise},saveCSVToFile:function(a,b,c){void 0===c&&(c={type:"text/csv;charset=utf-8"}),this.saveAs(a,b,c)},saveAs:function(a,b){if(Ext.isIE9m)return void Rally.ui.notify.Notifier.showWarning({message:"Export is not supported for IE9 and below."});var c=null;try{c=new Blob([a],{type:"text/plain"})}catch(d){window.BlobBuilder=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,window.BlobBuilder&&"TypeError"==d.name&&(bb=new BlobBuilder,bb.append([a]),c=bb.getBlob("text/plain"))}if(!c)return void Rally.ui.notify.Notifier.showWarning({message:"Export is not supported for this browser."});var e=b;if(Ext.isIE10p)return void window.navigator.msSaveOrOpenBlob(c,e);var f=this.createObjectURL(c);if(f){var g=document.createElement("a");"download"in g?g.download=e:g.target="_blank",g.innerHTML="Download File",g.href=f,Ext.isChrome||(g.onclick=this.destroyClickedElement,g.style.display="none",document.body.appendChild(g)),g.click()}else Rally.ui.notify.Notifier.showError({message:"Export is not supported "})},createObjectURL:function(a){return window.webkitURL?window.webkitURL.createObjectURL(a):window.URL&&window.URL.createObjectURL?window.URL.createObjectURL(a):null},destroyClickedElement:function(a){document.body.removeChild(a.target)}}),Ext.define("CArABU.utils.panel.SummaryPanel",{extend:"Ext.panel.Panel",alias:"widget.summarypanel",title:"Summary",collapsible:!0,cls:"app-panel",layout:"fit",initComponent:function(){this.callParent(),console.log("config",this)}}),Ext.define("CArABU.utils.panel.TeamDetailPanel",{extend:"Ext.container.Container",alias:"widget.teamdetailpanel",cls:"inline-filter-panel",flex:1,header:!1,minHeight:46,padding:"8px 0 0 0",bodyPadding:"7px 5px 5px 5px",collapseDirection:"top",collapsible:!0,animCollapse:!1,stateful:!0,stateId:"listFilterPanel",autoScroll:!0,initComponent:function(){this.items=this._buildPanel(),this.on("boxready",this.onBoxReady,this),this.callParent()},onBoxReady:function(a,b,c){console.log("this",b,c)},_buildPanel:function(){console.log("_buildPanel",this.rendered);var a=[];return _.each(this.releases,function(b){var c=b.get("Project"),d=Ext.create("CArABU.app.utils.teamMetricsCalculator",{project:c,iterations:this.iterations,snapshots:this.snapshots});a.push(this._addTeamGrid(d.getData(),c.Name)),console.log("project",c)},this),[{width:"100%",layout:{type:"vbox"},items:a}]},_addTeamGrid:function(a,b){var c=(Ext.Object.getKeys(a[0]),Ext.create("Rally.data.custom.Store",{data:a,pageSize:a.length}));return Ext.widget({xtype:"rallygrid",store:c,title:b,flex:1,columnCfgs:this._getColumnCfgs(a),showPagingToolbar:!1,showRowActionsColumn:!1})},_addGroupedTeamGrid:function(a){var b=(Ext.Object.getKeys(a[0]),Ext.create("Rally.data.custom.Store",{data:a,pageSize:a.length,groupField:"name"}));return console.log("data",a),{xtype:"rallygrid",store:b,features:{ftype:"grouping"},columnCfgs:this._getColumnCfgs(a),showPagingToolbar:!1,showRowActionsColumn:!1}},_getColumnCfgs:function(a){var b=[{dataIndex:"name",text:"Metric"}];return _.each(Ext.Object.getKeys(a[0]),function(a){"name"!==a&&"total"!==a&&"project"!==a&&b.push({dataIndex:a,text:a})}),b.push({dataIndex:"total",text:"Total"}),b}}),Ext.define("CArABU.app.utils.teamMetricsCalculator",{precision:2,constructor:function(a){this.project=a.project||{},this.iterationByName=this._filterIterations(a.iterations),this.snapshotsByIterationOid=this._filterSnapshots(a.snapshots),this.calculatedData={},this.daysOffsetFromIterationStart=a.daysOffsetFromIterationStart||0,this.daysOffsetFromPIStart=a.daysOffsetFromPIStart||0,this.release=a.release,this._filterIterationRevisions(a.iterationRevisions),this.defectTags=[],a.defectTag&&(Ext.isArray(a.defectTag)||(a.defectTag=a.defectTag.split(",")),this.defectTags=_.map(a.defectTag,function(a){return Rally.util.Ref.getOidFromRef(a)})),this._clearData()},getProjectName:function(){return this.project.Name},setDaysOffsetFromIterationStart:function(a){a!=this.daysOffsetFromIterationStart&&(this.daysOffsetFromIterationStart=a,this._clearData())},setDaysOffsetFromPIStart:function(a){a!=this.daysOffsetFromPIStart&&(this.daysOffsetFromPIStart=a,this._clearData())},_calculate:function(a){var b=this.iterationByName[a],c=this.daysOffsetFromIterationStart,d={plannedPoints:0,acceptedPoints:0,totalPointsAtSprintEnd:0,blockedDays:0,averageBlockedResolutionTime:0,defectsClosed:0,piPlanLoad:0};b||(this.calculatedData[a]={});for(var e=Rally.util.DateTime.add(b.StartDate,"day",c),f=b.EndDate,g=Rally.util.DateTime.add(this.release.ReleaseStartDate,"day",this.daysOffsetFromPIStart),h=this.snapshotsByIterationOid[b.ObjectID]||[],i={},j=0;j<h.length;j++){var k=h[j],l=Rally.util.DateTime.fromIsoString(k._ValidFrom),m=Rally.util.DateTime.fromIsoString(k._ValidTo),n=k._TypeHierarchy&&k._TypeHierarchy.slice(-1)[0];if(e>=l&&m>e&&(d.plannedPoints+=k.PlanEstimate),g>=l&&m>g&&(d.piPlanLoad+=k.PlanEstimate),m>new Date&&k.AcceptedDate.length>0&&(d.acceptedPoints+=k.PlanEstimate),f>=l&&m>f&&(d.totalPointsAtSprintEnd+=k.PlanEstimate),k.Blocked){var o=this._getBlockedDuration(k,b);if(o>0)if(i[k.ObjectID])if(i[k.ObjectID].currentlyBlocked){var p=i[k.ObjectID].durations.length-1,q=i[k.ObjectID].durations[p];i[k.ObjectID].durations[p]=q+o}else i[k.ObjectID].durations.push(o),i[k.ObjectID].currentlyBlocked=!0;else i[k.ObjectID]={durations:[o],currentlyBlocked:!0}}else i[k.ObjectID]&&(i[k.ObjectID].currentlyBlocked=!1);"Defect"==n&&k.Tags&&k.AcceptedDate&&_.intersection(k.Tags,this.defectTags).length>0&&d.defectsClosed++}var r=_.reduce(i,function(a,b,c){return a=a.concat(b.durations)},[]);d.blockedDays=Ext.Array.sum(r),d.averageBlockedResolutionTime=Ext.Array.mean(r),d.piPlanVelocity=this._calculatePIPlanVelocity(b,this.daysOffsetFromPIStart,this.release),this.calculatedData[a]=d},_calculatePIPlanVelocity:function(a,b,c){var d=Rally.util.DateTime.add(c.ReleaseStartDate,"day",b),e=0;return a.CreationDate<=d&&_.each(a.__iterationPlannedVelocities,function(a){a.updateDate<=d&&(e=a.value)}),e},_getBlockedDuration:function(a,b){var c=Rally.util.DateTime.fromIsoString(a._ValidFrom),d=Rally.util.DateTime.fromIsoString(a._ValidTo);if(c==d)return 0;if(!b)return 0;if(c>d){var e=d;d=c,c=e}if(c>b.EndDate||d<b.StartDate)return 0;c<b.StartDate&&d>b.StartDate&&(c=b.StartDate),d>b.EndDate&&c<b.EndDate&&(d=b.EndDate);var f=Rally.util.DateTime.getDifference(d,c,"hour");if(8>f)return d.getDay()>0&&d.getDay()<6||c.getDay()>0&&c.getDay()<6?f/8:0;for(var g=0,h=c;d>=h;){var i=h.getDay();0!=i&&6!=i&&g++;var j=Rally.util.DateTime.add(h,"day",1);h=j}return g-1},getData:function(){if(this.data)return this.data;var a=0,b=0,c={name:"Planned Points",total:0,project:this.project.Name,isPercent:!1,key:"plannedPoints"},d={name:"Accepted Points",total:0,project:this.project.Name,isPercent:!1,key:"acceptedPoints"},e={name:"Acceptance Ratio",total:0,project:this.project.Name,isPercent:!0,key:"acceptanceRatio"},f={name:"Points After Commitment",total:0,project:this.project.Name,isPercent:!1,key:"pointsAfterCommitment"},g={name:"Days Blocked",total:0,project:this.project.Name,isPercent:!1,key:"daysBlocked"},h={name:"Average Blocker Resolution",total:0,project:this.project.Name,isPercent:!1,key:"avgBlockerResolution"},i={name:"Defects Closed",total:0,project:this.project.Name,isPercent:!1,key:"defectsClosedByTag"},j={name:"PIP Velocity",total:0,project:this.project.Name,isPercent:!1,key:"piVelocityPlanned"},k={name:"PIP Load",total:0,project:this.project.Name,isPercent:!1,key:"piLoadPlanned"};return Ext.Object.each(this.iterationByName,function(l,m){var n=l.toString();c[n]=this.getPlannedPoints(l),c.total+=c[n],d[n]=this.getAcceptedPoints(l),d.total+=d[n],e[n]=this.getAcceptanceRatio(l),e[n]&&(e.total+=e[n],b++),f[n]=this.getPointsAddedAfterCommitment(l),f.total+=f[n],g[n]=this.getDaysBlocked(l),g.total+=g[n],h[n]=this.getAverageBlockerResolution(l),h[n]&&(h.total+=h[n],a++),i[n]=this.getDefectsClosedByTag(l),i.total+=i[n],j[n]=this.getPIPVelocityPlanned(l),j.total+=j[n],k[n]=this.getPIPLoadPlanned(l),k.total+=k[n]},this),h.total=a>0?h.total/a:0,e.total=b>0?e.total/b:0,this.data=[c,d,e,f,g,h,i,j,k],this.data},_getTotal:function(a){var b=this.getData(),c=_.find(b,function(b){return b.key==a});return c&&c.total},getPlannedPointsTotal:function(){return this._getTotal("plannedPoints")},getAcceptedPointsTotal:function(){return this._getTotal("acceptedPoints")},getAcceptanceRatioTotal:function(){return this._getTotal("acceptanceRatio")},getPointsAfterCommitmentTotal:function(){return this._getTotal("pointsAfterCommitment")},getDaysBlockedTotal:function(){return this._getTotal("daysBlocked")},getBlockerResolutionTotal:function(){return this._getTotal("avgBlockerResolution")},getDefectsClosedTotal:function(){return this._getTotal("defectsClosedByTag")},getPIPlanVelocityTotal:function(){return this._getTotal("piVelocityPlanned")},getPIPlanLoadTotal:function(){return this._getTotal("piLoadPlanned")},getPlannedPoints:function(a){return this.calculatedData[a]||this._calculate(a),this.calculatedData[a].plannedPoints||0},getAcceptedPoints:function(a){return this.calculatedData[a]||this._calculate(a),this.calculatedData[a].acceptedPoints||0},getAcceptanceRatio:function(a){return this.calculatedData[a]||this._calculate(a),this.calculatedData[a].plannedPoints>0?this.calculatedData[a].acceptedPoints/this.calculatedData[a].plannedPoints:0},getPointsAddedAfterCommitment:function(a){return this.calculatedData[a]||this._calculate(a),this.calculatedData[a].totalPointsAtSprintEnd-this.calculatedData[a].plannedPoints||0},getDaysBlocked:function(a){return this.calculatedData[a]||this._calculate(a),this.calculatedData[a].blockedDays||0},getAverageBlockerResolution:function(a){return this.calculatedData[a]||this._calculate(a),this.calculatedData[a].averageBlockedResolutionTime||0},getDefectsClosedByTag:function(a){return this.calculatedData[a]||this._calculate(a),this.calculatedData[a].defectsClosed||0},getPIPVelocityPlanned:function(a){return this.calculatedData[a]||this._calculate(a),Number(this.calculatedData[a].piPlanVelocity)||0},getPIPLoadPlanned:function(a){return this.calculatedData[a]||this._calculate(a),this.calculatedData[a].piPlanLoad||0},_filterSnapshots:function(a){var b=this.project.ObjectID;return _.reduce(a,function(a,c){var d=c.get("Project").ObjectID;if(d===b){var e=c.get("Iteration");a[e]||(a[e]=[]),a[e].push(c.getData())}return a},{})},_filterIterations:function(a){var b=this.project.ObjectID;return _.reduce(a,function(a,c){var d=c.get("Project")&&c.get("Project").ObjectID;if(d===b){var e=c.get("Name").replace(/[^a-z0-9]/gi," ");a[e]=c.getData()}return a},{})},_filterIterationRevisions:function(a){if(a&&0!=a.length){var b=_.reduce(a,function(a,b){var c=b.get("RevisionHistory")&&b.get("RevisionHistory").ObjectID;return c&&(a[c]||(a[c]=[]),a[c].push(b.getData())),a},{});_.each(this.iterationByName,function(a){var c=a.RevisionHistory&&a.RevisionHistory.ObjectID,d=b[c]||[];a.__iterationPlannedVelocities=this._calculateIterationVelocities(a,d)},this)}},_calculateIterationVelocities:function(a,b){if(0==b.length)return[{updateDate:a.CreationDate,plannedVelocity:a.PlannedVelocity||0}];var d=[{updateDate:a.CreationDate,plannedVelocity:0}],e=0,f=new RegExp(/PLANNED VELOCITY (added|removed) \[([0-9]*\.[0-9]*) Points\]/g),g=new RegExp(/PLANNED VELOCITY (changed from) \[([0-9]*\.[0-9]*) Points\] to \[([0-9]*\.[0-9]*) Points\]/g);return _.each(b,function(a){var b=(a.Description,f.exec(a.Description));b?"removed"==b[1]?(d[e].plannedVelocity=b[2],d.push({updateDate:a.CreationDate,value:0}),e++):(d.push({updateDate:a.CreationDate,value:b[2]}),e++):(c=g.exec(a.Description),c&&(d[e].plannedVelocity=c[1],d.push({updateDate:a.CreationDate,value:c[2]}),e++))}),d},_clearData:function(){this.data=null,this.calculatedData={}}}),Ext.define("CArABU.app.safeDeliveryMetrics",{extend:"Rally.app.App",componentCls:"app",logger:new CArABU.technicalservices.Logger,defaults:{margin:10},layout:{type:"accordion",titleCollapse:!1,animate:!0,activeOnTop:!0},integrationHeaders:{name:"CArABU.app.TSApp"},config:{defaultSettings:{daysOffsetFromIterationStart:0,defectTag:null,daysOffsetFromPIStart:0,precision:2}},releaseFetchList:["ObjectID","Project","Name","ReleaseStartDate","Children"],launch:function(){return this.logger.log("this.",this._hasScope()),this._hasScope()?void this._update():void this._addAppMessage("This app is designed to run on a Release scoped dashboard.<br/><br/>Please select <em>Edit Page...</em> from the Page Settings and set the <em>Show Filter</em> setting to Release.")},_update:function(){this.removeAll();var a=this.getReleaseTimeboxRecord();return this.logger.log("_update ",a),a?(this.setLoading(!0),void Deft.Chain.pipeline([this._fetchIterations,this._fetchIterationRevisions,this._fetchReleases,this._fetchSnapshots],this,{}).then({success:this._buildDisplay,failure:this._showErrorNotification,scope:this}).always(function(){this.setLoading(!1)},this)):void this._addAppMessage("Please select a Release.")},_showErrorNotification:function(a){Rally.ui.notify.Notifier.showError({message:a})},_fetchReleases:function(a){var b=Ext.create("Deft.Deferred");this.logger.log("_fetchReleases",a);var c=this.getReleaseTimeboxRecord(),d=[{property:"Name",value:c.get("Name")},{property:"ReleaseStartDate",value:c.get("ReleaseStartDate")},{property:"ReleaseDate",value:c.get("ReleaseDate")},{property:"Project.Children.ObjectID",value:""}];return Ext.create("Rally.data.wsapi.Store",{model:"Release",filters:d,fetch:this.releaseFetchList,limit:"Infinity",pageSize:2e3}).load({callback:function(c,d){d.wasSuccessful()?(a.releases=c,b.resolve(a)):b.reject("ERROR loading Releases: "+d.error&&d.error.errors.join(","))}}),b.promise},_fetchIterations:function(a){var b=Ext.create("Deft.Deferred"),c=this.getReleaseTimeboxRecord(),d=[{property:"EndDate",operator:">",value:c.get("ReleaseStartDate")},{property:"StartDate",operator:"<",value:c.get("ReleaseDate")},{property:"Project.Children.ObjectID",value:""}];return Ext.create("Rally.data.wsapi.Store",{model:"Iteration",filters:d,fetch:["ObjectID","Project","Name","StartDate","EndDate","RevisionHistory","PlannedVelocity","CreationDate"],limit:"Infinity",pageSize:2e3}).load({callback:function(c,d){d.wasSuccessful()?(a.iterations=c,b.resolve(a)):b.reject("ERROR loading ITerations: "+d.error&&d.error.errors.join(","))}}),b.promise},_fetchIterationRevisions:function(a){var b=Ext.create("Deft.Deferred"),c=_.map(a.iterations,function(a){return{property:"RevisionHistory.ObjectID",value:a.get("RevisionHistory").ObjectID}});return c=Rally.data.wsapi.Filter.or(c),this.logger.log("filters",c.toString()),c=c.and({property:"Description",operator:"contains",value:"PLANNED VELOCITY"}),Ext.create("Rally.data.wsapi.Store",{model:"Revision",filters:c,fetch:["ObjectID","RevisionHistory","Description","CreationDate"],limit:"Infinity",pageSize:2e3,enablePostGet:!0,sorters:[{property:"CreationDate",direction:"ASC"}]}).load({callback:function(c,d){d.wasSuccessful()?(a.iterationRevisions=c,b.resolve(a)):b.reject("ERROR loading iteration revisions: "+d.error&&d.error.errors.join(","))}}),b.promise},_fetchSnapshots:function(a){var b=Ext.create("Deft.Deferred"),c=new Date("2999-01-01"),d=new Date("1900-01-01"),e=[];return _.each(a.iterations,function(a){a.get("StartDate")<c&&(c=a.get("StartDate")),a.get("EndDate")>d&&(d=a.get("EndDate")),e.push(a.get("ObjectID"))}),this.logger.log("_fetchSnapshots -- ",e,c,d),Ext.create("Rally.data.lookback.SnapshotStore",{fetch:["ObjectID","Project","Iteration","PlanEstimate","AcceptedDate","Blocked","_ValidFrom","_ValidTo","_TypeHierarchy","Tags"],find:{_TypeHierarchy:{$in:["Defect","HierarchicalRequirement"]},Iteration:{$in:e},_ValidTo:{$gte:c},_ValidFrom:{$lte:d},_ProjectHierarchy:this.getContext().getProject().ObjectID},hydrate:["_TypeHierarchy","Project"],limit:"Infinity",removeUnauthorizedSnapshots:!0,sort:{_ValidFrom:1}}).load({callback:function(c,d){d.wasSuccessful()?(a.snapshots=c,b.resolve(a)):b.reject("Error loading snapshots: "+d.error&&d.error.errors.join(","))}}),b.promise},_buildDisplay:function(a){this.logger.log("_buildDisplay",a);var b=[],c=[];_.each(a.releases,function(d){var e=d.get("Project"),f=Ext.create("CArABU.app.utils.teamMetricsCalculator",{project:e,release:d.getData(),iterations:a.iterations,snapshots:a.snapshots,iterationRevisions:a.iterationRevisions,daysOffsetFromIterationStart:this.getdaysOffsetFromIterationStart(),defectTag:this.getDefectTag()});b.push(this._addTeamGrid(f.getData(),e.Name)),c.push(f)},this),this.add({xtype:"panel",height:400*b.length,autoScroll:!0,cls:"fieldBucket",flex:1,itemId:"teamDetail",tools:[{type:"export",tooltip:"Export Data",renderTpl:['<div class="control icon-export" style="margin-right:20px"></div>'],width:35,handler:this._exportTeams,scope:this},{type:"close",tooltip:"Collapse panel to see Summary data",renderTpl:['<div class="control icon-chevron-down" style="margin-right:20px"></div>'],renderSelectors:{toolEl:".icon-chevron-down"},width:35,handler:function(a,b,c){this.down("#teamDetail").collapse()},scope:this}],hideCollapseTool:!0,padding:"8px 0 0 0",bodyPadding:"7px 5px 5px 5px",collapseDirection:"top",collapsible:!0,animCollapse:!1,items:b,title:"Teams"}),this.add({xtype:"panel",height:600,autoScroll:!0,title:"Summary",cls:"fieldBucket",flex:1,itemId:"summary",tools:[{type:"export",tooltip:"Export Data",renderTpl:['<div class="control icon-export" style="margin-right:20px"></div>'],width:35,handler:this._exportSummary,scope:this},{tooltip:"Collapse panel to see team detail data",renderTpl:['<div class="control icon-chevron-down" style="margin-right:20px"></div>'],width:35,handler:function(a,b,c,d){this.down("#summary").collapse()},scope:this}],hideCollapseTool:!0,padding:"8px 0 0 0",bodyPadding:"7px 5px 5px 5px",collapseDirection:"top",collapsible:!0,animCollapse:!1,items:[this._getSummaryGrid(c)]})},_exportTeams:function(){this.logger.log("_exportTeams");var a=this.down("#teamDetail").query("rallygrid"),b=[];_.each(a,function(a){var c=a.getColumnCfgs(),d=["Team"].concat(_.pluck(c,"text"));b.push('"'+d.join('","')+'"'),a.getStore().each(function(d){var e=[a.title];_.each(c,function(a){e.push(d.get(a.dataIndex))}),b.push(e.join(","))}),b.push("")});var c=Ext.String.format("team-detail-{0}.csv",Rally.util.DateTime.format(new Date,"Y-m-d-h-i-s"));TSUtilities.saveCSVToFile(b.join("\r\n"),c)},_exportSummary:function(){this.logger.log("_exportSummary");var a=this.down("#summary").query("rallygrid"),b=[];if(a&&a.length>0){a=a[0];var c=a.getColumnCfgs(),d=_.pluck(c,"text");b.push('"'+d.join('","')+'"'),a.getStore().each(function(a){var d=_.map(c,function(b){return a.get(b.dataIndex)});b.push(d.join(","))});var e=Ext.String.format("summary-{0}.csv",Rally.util.DateTime.format(new Date,"Y-m-d-h-i-s"));TSUtilities.saveCSVToFile(b.join("\r\n"),e)}},_getSummaryGrid:function(a){var b=[];_.each(a,function(a){var c=a.project;b.push({project:c.Name,pointsPlanned:a.getPlannedPointsTotal(),pointsAccepted:a.getAcceptedPointsTotal(),acceptanceRatio:a.getAcceptanceRatioTotal(),pointsAdded:a.getPointsAfterCommitmentTotal(),daysBlocked:a.getDaysBlockedTotal(),blockerResolution:a.getBlockerResolutionTotal(),defectsClosed:a.getDefectsClosedTotal(),piPlanVelocity:a.getPIPlanVelocityTotal(),piPlanLoad:a.getPIPlanLoadTotal()})}),this.logger.log("data",b);var c=Ext.create("Rally.data.custom.Store",{fields:Ext.Object.getKeys(b[0]),data:b,pageSize:b.length});return Ext.widget({xtype:"rallygrid",store:c,features:[{ftype:"summary"}],columnCfgs:this._getSummaryColumnCfgs(b),showPagingToolbar:!1,showRowActionsColumn:!1})},_addTeamGrid:function(a,b){this.logger.log("_addTeamGrid",a);var c=Ext.Object.getKeys(a[0]),d=Ext.create("Rally.data.custom.Store",{fields:c,data:a,pageSize:a.length});return Ext.widget({xtype:"rallygrid",store:d,title:b,margin:"15 0 25 0",columnCfgs:this._getColumnCfgs(a),showPagingToolbar:!1,showRowActionsColumn:!1})},_getColumnCfgs:function(a){var b=[{dataIndex:"name",text:"Metric",flex:1}],c=["name","key","project","total","isPercent"];return this.logger.log("_getColumnCfgs",a),_.each(Ext.Object.getKeys(a[0]),function(a){Ext.Array.contains(c,a)||b.push({dataIndex:a,text:a,renderer:this._numberRenderer})},this),b.push({dataIndex:"total",text:"Total",renderer:this._numberRenderer}),b},_numberRenderer:function(a,b,c){return c.get("isPercent")===!0?Math.round(100*a)+"%":isNaN(a)||a%1===0?a:a.toFixed(2)},_getSummaryColumnCfgs:function(a){var b=[{dataIndex:"project",text:"Team",flex:1,summaryType:"count",summaryRenderer:function(a,b,c){return Ext.String.format('<div class="app-summary">{0} Team{1} Total</div>',a,1!==a?"s":"")}},{dataIndex:"pointsPlanned",text:"Points Planned",summaryType:"sum"},{dataIndex:"pointsAccepted",text:"Points Accepted",summaryType:"sum"},{dataIndex:"acceptanceRatio",text:"Point Acceptance Rate",renderer:function(a){return Math.round(100*a)+"%"},summaryType:"average"},{dataIndex:"daysBlocked",text:"Days Blocked",summaryType:"sum"},{dataIndex:"blockerResolution",text:"Average Days to Resolve Blockers",summaryType:"average",renderer:this._numberRenderer},{dataIndex:"defectsClosed",text:"Total number of SIs Closed",summaryType:"sum"},{dataIndex:"piPlanVelocity",text:"Total PI Plan Velocity",summaryType:"sum"},{dataIndex:"piPlanLoad",text:"Total PI Plan Load",summaryType:"sum"}];return b},_addAppMessage:function(a){this.add({html:Ext.String.format('<div class="app-msg">{0}</div>',a),xtype:"panel",layout:"fit",frameHeader:!1,region:"north"})},_hasScope:function(){var a=this.getContext();return a.getTimeboxScope()&&"release"===a.getTimeboxScope().getType().toLowerCase()},onTimeboxScopeChange:function(a){this.logger.log("onTimeboxScopeChange",a),a&&"release"===a.type.toLowerCase()&&(this.getContext().setTimeboxScope(a),this._update())},getReleaseTimeboxRecord:function(){return this._hasScope()?this.getContext().getTimeboxScope()&&this.getContext().getTimeboxScope().getRecord()||null:null},getdaysOffsetFromIterationStart:function(){return this.getSetting("daysOffsetFromIterationStart")},getDefectTag:function(){return this.getSetting("defectTag")},getDaysOffsetFromPIStart:function(){return this.getSetting("daysOffsetFromPIStart")},getSettingsFields:function(){return[{name:"daysOffsetFromIterationStart",xtype:"rallynumberfield",minValue:0,maxValue:30,fieldLabel:"Days Offset From Iteration Start",labelAlign:"right",margin:10,labelWidth:200},{name:"daysOffsetFromPIStart",xtype:"rallynumberfield",minValue:0,maxValue:30,fieldLabel:"Days Offset From PI Start",labelAlign:"right",margin:10,labelWidth:200},{name:"defectTag",xtype:"rallytagpicker",fieldLabel:"Defect Tag",labelAlign:"right",labelWidth:200,margin:"10 10 200 10"}]},getOptions:function(){var a=[{text:"About...",handler:this._launchInfo,scope:this}];return a},_launchInfo:function(){this.about_dialog&&this.about_dialog.destroy(),this.about_dialog=Ext.create("Rally.technicalservices.InfoLink",{showLog:this.getSetting("saveLog"),logger:this.logger})},isExternal:function(){return"undefined"==typeof this.getAppId()}});

               Rally.launchApp('CArABU.app.safeDeliveryMetrics', {
                   name: 'SAFe Delivery Metrics'
               });
        });
    </script>

    <style type="text/css">

.app {
   background-color: #fff;
}
.tsinfolink {
    position:absolute;
    right:0px;
    width: 14px;
    height: 14px;
    border-radius: 7px;
    text-align: center;
    color: white;
    background: #C0C0C0;
    border-style: solid;
    border-width: 1px;
    margin-top: 25px;
    margin-right: 5px;
    cursor: pointer;
}

.app-msg {
   font-family: ProximaNova,helvetica,sans-serif;
   font-size: 14px;
   color: #666;
   text-align: center;
}
.app-panel .x-panel-header-text {
   font-family: ProximaNovaSemiBold,Helvetica,Arial;
   color: #555;
   background-color: #f6f6f6;
}

.rally-grid .x-panel-header-default {
   background-color: #f6f6f6!important;
}

.rally-grid .x-panel-header-text-default {
   background-color: #f6f6f6!important;
   font-size: 12px;
   font-family: ProximaNovaSemiBold,Helvetica,Arial;
}

.x-panel-body-default {
   background-color: #f6f6f6!important;
}

.app-summary {
  font-family: ProximaNovaSemiBold,Helvetica,Arial;
  text-transform: uppercase;
}

.x-accordion-hd .x-panel-header-text-container{
  font-family: ProximaNovaSemiBold,Helvetica,Arial;
  text-transform: uppercase;
  background-color: #f6f6f6;
  color: #444;
  font-size: 16px;
  border: 1;
  height: 20px;
}

.fieldBucket {
  border-top-right-radius: 2px;
  border-top-left-radius: 2px;
}

.x-accordion-item .x-accordion-hd {
  background-color: #f6f6f6;
}

    </style>

</head>
<body></body>
</html>